Инструкция:
1) Скачать данный репозиторий.
2) Установить Java версии не ниже 8.
3) Установить IntelliJ IDEA с сайта jetbrains.com/idea/
4) Открыть проект в IntelliJ IDEA. Выбрать версию Java SDK проекта не ниже 8 в 
разделе Project Structure.
5) Импортировать зависимости.

PerformanceTestLauncher.java - для запуска тестов производительности(JMH).
Application.java - для запуска простой демонстрации однопоточного чтения/записи.

Значения id(Long), data(String) хранятся в пуле данных типа ConcurrentHashMap в виде 
пары ключ-значение. ConcurrentHashMap обеспечивает потокобезопасное чтение и запись. 
Для оптимизации многопоточной работы ConcurrentHashMap возможно выбрать подходящее
значение concurrencyLevel.

DataHandler.java - класс для хранения и обработки данных.  
Пул данных инициализируется при запуске приложения из json файла. При завершении
работы приложения данные записываются также в json файл. Методы read() и write()
реализованы в DataHandler.java.

Данная реализация имеет ограничение размером ОЗУ. Для больших объемов данных
необходимо использовать приемы оптимизации или другие способы хранения.
ConcurrentHashMap дает неплохие показатели скорости при многопоточной работе, которых
вполне достаточно для данной реализации.

PerformanceTest.java - тестирование производительности при помощи JMH.
ExecPlan.java - дополнительные параметры тестирования. В данном случае здесь
определены количества потоков работы с пулом данных для разных итераций тестирования.
Client.java - поток, осуществляющий в случайном порядке операции чтения и записи
в пул данных.

Для каждой итерации тестирования определено одно и то же количество операций, которое
равномерно распределено между потоками. Это значение OPERATIONS_NUM в 
классе PerformanceTest.java.








